apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nextcloud.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.nextcloud.appName }}
spec:
  replicas: {{ .Values.nextcloud.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ .Values.nextcloud.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.nextcloud.appName }}
    spec:
      containers:
      - name: nextcloud-app
        image: {{ .Values.nextcloud.image }}
        ports:
        - containerPort: 80
          name: http
        env:
        - name: NEXTCLOUD_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nextcloud.secretName }}
              key: NEXTCLOUD_ADMIN_USER
        - name: NEXTCLOUD_ADMIN_PASSWORD  
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nextcloud.secretName }}
              key: NEXTCLOUD_ADMIN_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nextcloud.postgres.secretName }}
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nextcloud.postgres.secretName }}
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nextcloud.postgres.secretName }}
              key: POSTGRES_PASSWORD
        - name: POSTGRES_HOST
          value: "{{ .Values.nextcloud.postgres.host }}"
        - name: POSTGRES_PORT
          value: "{{ .Values.nextcloud.postgres.port }}"
        - name: NEXTCLOUD_TRUSTED_DOMAINS
          value: "{{ .Values.nextcloud.trustedDomains }}"
        - name: OVERWRITEPROTOCOL
          value: "{{ .Values.nextcloud.protocol }}"
        - name: OVERWRITEHOST
          value: "{{ .Values.nextcloud.host }}"
        - name: OVERWRITECLIURL
          value: "{{ .Values.nextcloud.protocol }}://{{ .Values.nextcloud.host }}"
        - name: PHP_MEMORY_LIMIT
          value: "{{ .Values.nextcloud.php.memoryLimit }}"
        - name: PHP_UPLOAD_LIMIT
          value: "{{ .Values.nextcloud.php.uploadLimit }}"
        - name: REDIS_HOST
          value: "{{ .Values.nextcloud.redis.host }}"
        - name: REDIS_PORT
          value: "{{ .Values.nextcloud.redis.port }}"
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nextcloud.redis.secretName }}
              key: REDIS_PASSWORD
        # env variables for proper config (from official nextcloud helm repo chart github)
        - name: NEXTCLOUD_DATA_DIR
          value: "/var/www/html/data"
        - name: APACHE_DISABLE_REWRITE_IP
          value: "1"
        - name: APACHE_BODY_LIMIT
          value: "10737418240"
        - name: PHP_UPLOAD_MAX_FILESIZE
          value: "{{ .Values.nextcloud.php.uploadLimit }}"
        - name: PHP_POST_MAX_SIZE
          value: "{{ .Values.nextcloud.php.uploadLimit }}"
        - name: PHP_MAX_EXECUTION_TIME
          value: "3600"
        - name: PHP_MAX_INPUT_TIME
          value: "3600"
        lifecycle:
          postStart:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  # Ensure proper permissions on data directory
                  chown -R www-data:www-data /var/www/html/data || true
                  chmod 750 /var/www/html/data || true
                  
                  # Configure Apache request body limit properly
                  echo "LimitRequestBody ${APACHE_BODY_LIMIT}" > /etc/apache2/conf-available/apache-limits.conf
                  a2enconf apache-limits
                  service apache2 reload || true
        volumeMounts:
        - name: nextcloud-data
          mountPath: /var/www/html
        # DO NOT MOUNT INDIVIDUAL CONFIG FILES let Nextcloud auto-configure
        readinessProbe:
          httpGet:
            path: /status.php
            port: 80
            httpHeaders:
            - name: Host
              value: {{ .Values.nextcloud.host }}
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 15
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /status.php
            port: 80
            httpHeaders:
            - name: Host
              value: {{ .Values.nextcloud.host }}
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /status.php
            port: 80
            httpHeaders:
            - name: Host
              value: {{ .Values.nextcloud.host }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        resources:
          requests:
            memory: {{ .Values.nextcloud.resources.requests.memory }}
            cpu: {{ .Values.nextcloud.resources.requests.cpu }}
          limits:
            memory: {{ .Values.nextcloud.resources.limits.memory }}
            cpu: {{ .Values.nextcloud.resources.limits.cpu }}
      volumes:
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: {{ .Values.nextcloud.pvcName }}
      initContainers:
      - name: wait-for-dependencies
        image: busybox:1.36
        command:
          - /bin/sh
          - -c
          - |
            echo "Waiting for Redis and PostgreSQL to become available..."

            until nc -z {{ .Values.nextcloud.redis.host }} {{ .Values.nextcloud.redis.port }}; do
              echo "Waiting for Redis at {{ .Values.nextcloud.redis.host }}:{{ .Values.nextcloud.redis.port }}..."
              sleep 2
            done
            echo "Redis is reachable."

            until nc -z {{ .Values.nextcloud.postgres.host }} {{ .Values.nextcloud.postgres.port }}; do
              echo "Waiting for PostgreSQL at {{ .Values.nextcloud.postgres.host }}:{{ .Values.nextcloud.postgres.port }}..."
              sleep 2
            done
            echo "PostgreSQL is reachable."

            echo "All dependencies are up. Proceeding with Nextcloud startup."
